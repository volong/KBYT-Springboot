# Connection url for the database "netgloo_blog"
#spring.datasource.url = jdbc:postgresql://euwtwrepwckfms:942a1c896e8b95e752a6e2471a61f79a3d55fbf001e541457064a7a078cd5271@ec2-52-207-25-133.compute-1.amazonaws.com:5432/djrqm3a4ejqcj
#spring.datasource.username=euwtwrepwckfms
#spring.datasource.password=942a1c896e8b95e752a6e2471a61f79a3d55fbf001e541457064a7a078cd5271
# ===============================
# = JPA / HIBERNATE
# ===============================

spring.datasource.url = jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=volong0708

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Allows Hibernate to generate SQL optimized for a particular DBMS
#Aspring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
#security.basic.enabled=false
#management.security.enabled=false